{"version":3,"sources":["context.js","components/header.jsx","components/snackbar.jsx","components/register.jsx","components/login.jsx","components/home.jsx","components/conversationCreateDialog.jsx","components/conversationJoinDialog.jsx","components/conversationJoinStatusDialog.jsx","components/loadingIcon.jsx","components/leaveConfirmation.jsx","components/dashboard.jsx","components/notFound.jsx","routes/dashboardRoute.jsx","routes/homeRoute.jsx","routes/chatRoute.jsx","components/chatBubble.jsx","components/messages.jsx","components/conversationSettingsDialog.jsx","components/type.jsx","components/chat.jsx","App.js","serviceWorker.js","index.js"],"names":["createContext","Provider","Consumer","useStyles","makeStyles","title","flexGrow","display","alignItems","Header","classes","react_default","a","createElement","_ref","authenticatedUser","handleLogout","AppBar","position","color","Toolbar","Box","className","Typography","component","Link","to","variant","style","marginRight","textDecoration","Chat_default","Button","onClick","SuccessSnackbar","props","handleMessage","open","type","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","SnackbarContent","backgroundColor","green","message","action","IconButton","key","Close_default","RegisterForm","username","password","password2","validationErrors","showRegisterSuccessMessage","showLoginFailedMessage","whichSnackbar","onChange","errors","Fragment","flexDirection","autoComplete","includes","align","TextField","label","name","margin","value","helperText","error","snackbar","LoginForm","loginUsername","loginPassword","onLogin","height","theme","introduction","marginTop","spacing","fontWeight","Home","gutterBottom","Grid","container","item","xs","login","register","rightIcon","marginLeft","ConversationCreateDialog","conversationCreateDialogStatus","handleConverstaionDialog","handleConverstaionCreate","Create_default","Dialog","DialogTitle","id","DialogContent","autoFocus","fullWidth","multiline","rowsMax","DialogActions","ConversationJoinDialog","handleConverstaionJoinDialog","conversationJoinDialogStatus","handleConverstaionJoin","Send_default","ConversationJoinInfoDialog","conversationJoinStatus","conversationInfoDialog","handleConversationJoinInfoDialogStatus","conversationJoinMessages","boxChat","justifyContent","boxDashboard","LoadingIcon","page","CircularProgress","size","progress","Delete","_useState","useState","_useState2","Object","slicedToArray","setOpen","_useState3","_useState4","confirmationName","handleChange","_useState5","_useState6","setError","_ref2","handleLeaveConfirmation","placeholder","e","target","edge","Done_default","Tooltip","placement","TransitionComponent","Zoom","ExitToApp_default","@global","::-webkit-scrollbar","width","::-webkit-scrollbar-thumb","background","borderRadius","paper","palette","default","marginBottom","padding","textAlign","overflow","buttons","defineProperty","breakpoints","down","flexBasis","conversations","overflowY","&:hover","&::-webkit-scrollbar-thumb","Dashboard","conversationList","Paper","elevation","conversationCreateDialog","conversationJoinDialog","conversationJoinStatusDialog","loadingIcon","length","List","ListSubheader","disableSticky","map","conversation","ListItem","pathname","state","selectedConversation","objectSpread","button","divider","ListItemText","primary","ListItemSecondaryAction","leaveConfirmation","notFound","DashboardRoute","Component","rest","objectWithoutProperties","react_router","assign","render","HomeRoute","ChatRoute","location","goToConversation","updateConversation","clearActiveConversation","_bubble","own","alignSelf","other","bubble","cardContent","messageArea","borderStyle","ownMessageArea","borderColor","otherMessageArea","infoBox","iconButton","mobileInfoBox","mobileInnerInfoBox","mobileDate","ChatBubble","content","createdAt","calcAgo","ago1","setAgo","useEffect","setInterval","Card","concat","CardContent","Avatar","toUpperCase","Messages","endMessagesRef","useRef","current","scrollIntoView","behavior","activeConversation","calculateTimesAgo","messages","chatBubble","_id","sentBy","ref","ConversationSettingsDialog","handleConversationSettingsDialog","conversationSettingsDialogStatus","newUser","maxWidth","admin","memberCandidates","disableGutters","ListItemIcon","Person_default","bind","Divider","members","_ref3","Type","socket","sendMessage","MoreVert_default","onKeyPress","preventDefault","conversationSettingsDialog","Chat","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","io","_this$props","on","disconnect","_this2","components_type","createMuiTheme","App","setState","_ref$target","substr","removeValidationError","i","index","indexOf","filter","_","addValidationError","prevState","toConsumableArray","isValid","_this$state","valid","trim","isConversationValid","_this$state2","conversationName","conversationDescription","handleSubmit","_this$state3","user","axios","post","then","res","data","catch","err","console","log","handleLogin","_this$state4","getConversationList","response","status","get","_this$state5","conversationJoinName","_this$state6","conversationCreated","conversationExists","setTimeout","reverse","left","userID","conversationID","_this$state7","emit","diffMs","Date","diffSec","Math","floor","diffMin","diffHour","diffDay","diffMonth","deleteConfirmationStatus","_ref4","ThemeProvider","header","Container","homeRoute","exact","path","dashboardRoute","chatRoute","component2","withRouter","App_App","Boolean","window","hostname","match","ReactDOM","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da92eddc.chunk.js","sourcesContent":["import {\r\n    createContext\r\n} from \"react\";\r\n\r\nexport const {\r\n    Provider,\r\n    Consumer\r\n} = createContext();","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, Button, Box } from \"@material-ui/core\";\r\nimport { Consumer } from \"../context\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n});\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Consumer>\r\n      {({ authenticatedUser, handleLogout }) => (\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Toolbar>\r\n            <Box className={classes.title}>\r\n              <Typography\r\n                component={Link}\r\n                to=\"/\"\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                style={{ marginRight: 2, textDecoration: \"none\" }}\r\n              >\r\n                What's Up\r\n              </Typography>\r\n              <ChatIcon />\r\n            </Box>\r\n            {authenticatedUser ? (\r\n              <Button\r\n                onClick={handleLogout}\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n              >\r\n                Logout\r\n              </Button>\r\n            ) : null}\r\n          </Toolbar>\r\n        </AppBar>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Snackbar, IconButton, SnackbarContent } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst SuccessSnackbar = props => {\r\n  const { handleMessage, open, type } = props;\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={3000}\r\n      onClose={handleMessage}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\"\r\n      }}\r\n    >\r\n      <SnackbarContent\r\n        style={\r\n          type === \"success\"\r\n            ? { backgroundColor: green[600] }\r\n            : type === \"error\"\r\n            ? { backgroundColor: \"#f44336\" }\r\n            : null\r\n        }\r\n        message={\r\n          <span>\r\n            {type === \"success\"\r\n              ? \"Registered Successfully!\"\r\n              : \"Username or password did not matched\"}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton key=\"close\" color=\"inherit\" onClick={handleMessage}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ]}\r\n      />\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default SuccessSnackbar;\r\n","import React from \"react\";\r\nimport { TextField, Button, Typography } from \"@material-ui/core\";\r\nimport { Consumer } from \"../context\";\r\nimport SuccessSnackbar from \"./snackbar\";\r\n\r\nconst RegisterForm = () => {\r\n  return (\r\n    <Consumer>\r\n      {({\r\n        username,\r\n        password,\r\n        password2,\r\n        validationErrors,\r\n        showRegisterSuccessMessage,\r\n        showLoginFailedMessage,\r\n        whichSnackbar,\r\n        onChange,\r\n        onClick,\r\n        handleMessage,\r\n        errors\r\n      }) => (\r\n        <>\r\n          <form\r\n            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            autoComplete=\"off\"\r\n          >\r\n            {validationErrors.includes(0) ? (\r\n              <Typography variant=\"caption\" color=\"error\" align=\"center\">\r\n                {errors[0]}\r\n              </Typography>\r\n            ) : null}\r\n            <TextField\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              onChange={onChange}\r\n              value={username}\r\n              helperText={\r\n                validationErrors.includes(0)\r\n                  ? null\r\n                  : validationErrors.includes(1)\r\n                  ? errors[1]\r\n                  : validationErrors.includes(2)\r\n                  ? errors[2]\r\n                  : validationErrors.includes(5)\r\n                  ? errors[5]\r\n                  : null\r\n              }\r\n              error={\r\n                validationErrors.includes(0)\r\n                  ? false\r\n                  : validationErrors.includes(1)\r\n                  ? true\r\n                  : validationErrors.includes(2)\r\n                  ? true\r\n                  : validationErrors.includes(5)\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n            <TextField\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              onChange={onChange}\r\n              value={password}\r\n              type=\"password\"\r\n              helperText={\r\n                validationErrors.includes(0)\r\n                  ? null\r\n                  : validationErrors.includes(3)\r\n                  ? errors[3]\r\n                  : null\r\n              }\r\n              error={\r\n                validationErrors.includes(0)\r\n                  ? false\r\n                  : validationErrors.includes(3)\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n            <TextField\r\n              label=\"Confirm Password\"\r\n              name=\"password2\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              onChange={onChange}\r\n              value={password2}\r\n              type=\"password\"\r\n              helperText={\r\n                validationErrors.includes(0)\r\n                  ? null\r\n                  : validationErrors.includes(4)\r\n                  ? errors[4]\r\n                  : null\r\n              }\r\n              error={\r\n                validationErrors.includes(0)\r\n                  ? false\r\n                  : validationErrors.includes(4)\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n            <Button onClick={onClick} variant=\"contained\">\r\n              Register\r\n            </Button>\r\n          </form>\r\n          <SuccessSnackbar\r\n            handleMessage={handleMessage}\r\n            open={showRegisterSuccessMessage || showLoginFailedMessage}\r\n            type={whichSnackbar()}\r\n          />\r\n        </>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { Consumer } from \"../context\";\r\n\r\nconst LoginForm = () => {\r\n  return (\r\n    <Consumer>\r\n      {({ loginUsername, loginPassword, onChange, onLogin }) => (\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}\r\n        >\r\n          <TextField\r\n            label=\"Username\"\r\n            name=\"loginUsername\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            style={{ flexGrow: 1 }}\r\n            onChange={onChange}\r\n            value={loginUsername}\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            name=\"loginPassword\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            style={{ flexGrow: 1 }}\r\n            onChange={onChange}\r\n            value={loginPassword}\r\n            type=\"password\"\r\n          />\r\n          <Button onClick={onLogin} variant=\"contained\">\r\n            Login\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport RegisterForm from \"./register\";\r\nimport LoginForm from \"./login\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  introduction: {\r\n    marginTop: theme.spacing(2),\r\n    fontWeight: 500\r\n  }\r\n}));\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Typography\r\n        variant=\"h3\"\r\n        className={classes.introduction}\r\n        color=\"primary\"\r\n        align=\"center\"\r\n        gutterBottom\r\n      >\r\n        Login or Register to Continue\r\n      </Typography>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={6}>\r\n          <LoginForm />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <RegisterForm />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@material-ui/core\";\r\nimport { Consumer } from \"../context\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ConversationCreateDialog = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Consumer>\r\n      {({\r\n        conversationCreateDialogStatus,\r\n        handleConverstaionDialog,\r\n        onChange,\r\n        handleConverstaionCreate,\r\n        validationErrors,\r\n        errors\r\n      }) => (\r\n        <>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleConverstaionDialog}\r\n          >\r\n            Start a New Conversation\r\n            <CreateIcon className={classes.rightIcon} />\r\n          </Button>\r\n          <Dialog\r\n            open={conversationCreateDialogStatus}\r\n            onClose={handleConverstaionDialog}\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">New Conversation</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                label=\"Name\"\r\n                type=\"text\"\r\n                name=\"conversationName\"\r\n                fullWidth\r\n                onChange={onChange}\r\n                autoComplete=\"off\"\r\n                helperText={\r\n                  validationErrors.includes(6)\r\n                    ? errors[6]\r\n                    : validationErrors.includes(7)\r\n                    ? errors[7]\r\n                    : validationErrors.includes(9)\r\n                    ? errors[9]\r\n                    : null\r\n                }\r\n                error={\r\n                  validationErrors.includes(6)\r\n                    ? true\r\n                    : validationErrors.includes(7)\r\n                    ? true\r\n                    : validationErrors.includes(9)\r\n                    ? true\r\n                    : false\r\n                }\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                label=\"Description (optional)\"\r\n                type=\"text\"\r\n                name=\"conversationDescription\"\r\n                fullWidth\r\n                multiline\r\n                rowsMax=\"2\"\r\n                onChange={onChange}\r\n                autoComplete=\"off\"\r\n                helperText={validationErrors.includes(8) ? errors[8] : null}\r\n                error={validationErrors.includes(8) ? true : false}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleConverstaionDialog} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleConverstaionCreate} color=\"primary\">\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default ConversationCreateDialog;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@material-ui/core\";\r\nimport { Consumer } from \"../context\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ConversationJoinDialog = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Consumer>\r\n      {({\r\n        onChange,\r\n        handleConverstaionJoinDialog,\r\n        conversationJoinDialogStatus,\r\n        handleConverstaionJoin\r\n      }) => (\r\n        <>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleConverstaionJoinDialog}\r\n          >\r\n            Join a Conversation\r\n            <SendIcon className={classes.rightIcon} />\r\n          </Button>\r\n          <Dialog\r\n            open={conversationJoinDialogStatus}\r\n            onClose={handleConverstaionJoinDialog}\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n              Join a Conversation\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                label=\"Name\"\r\n                type=\"text\"\r\n                name=\"conversationJoinName\"\r\n                fullWidth\r\n                onChange={onChange}\r\n                autoComplete=\"off\"\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleConverstaionJoinDialog} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleConverstaionJoin} color=\"primary\">\r\n                Join\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default ConversationJoinDialog;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { Consumer } from \"../context\";\r\n\r\nconst ConversationJoinInfoDialog = () => {\r\n  return (\r\n    <Consumer>\r\n      {({\r\n        conversationJoinStatus,\r\n        conversationInfoDialog,\r\n        handleConversationJoinInfoDialogStatus,\r\n        conversationJoinMessages\r\n      }) => (\r\n        <Dialog\r\n          open={conversationInfoDialog}\r\n          onClose={handleConversationJoinInfoDialogStatus}\r\n        >\r\n          <DialogContent>\r\n            <Typography variant=\"body1\">\r\n              {conversationJoinStatus === -2\r\n                ? conversationJoinMessages[0]\r\n                : conversationJoinStatus === 2\r\n                ? conversationJoinMessages[1]\r\n                : conversationJoinStatus === 1\r\n                ? conversationJoinMessages[2]\r\n                : conversationJoinStatus === 0\r\n                ? conversationJoinMessages[3]\r\n                : conversationJoinMessages[4]}\r\n            </Typography>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={handleConversationJoinInfoDialogStatus}\r\n              color=\"primary\"\r\n            >\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default ConversationJoinInfoDialog;\r\n","import React from \"react\";\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  boxChat: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1\r\n  },\r\n  boxDashboard: {\r\n    marginTop: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst LoadingIcon = ({ page }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={page === \"chat\" ? classes.boxChat : classes.boxDashboard}>\r\n      <CircularProgress\r\n        size={50}\r\n        className={classes.progress}\r\n        color=\"secondary\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingIcon;\r\n","import React, { useState } from \"react\";\r\nimport { TextField, IconButton, Tooltip, Zoom } from \"@material-ui/core\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Consumer } from \"../context\";\r\n\r\nconst Delete = ({ name, id }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [confirmationName, handleChange] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  return (\r\n    <Consumer>\r\n      {({ handleLeaveConfirmation }) => (\r\n        <>\r\n          {open ? (\r\n            <>\r\n              <TextField\r\n                placeholder=\"Type conversation name\"\r\n                onChange={e => handleChange(e.target.value)}\r\n                error={error}\r\n                autoFocus\r\n              />\r\n              <IconButton\r\n                edge=\"end\"\r\n                onClick={() => {\r\n                  if (confirmationName === name) {\r\n                    handleLeaveConfirmation(id);\r\n                    handleChange(\"\");\r\n                    setOpen(!open);\r\n                    setError(false);\r\n                  } else {\r\n                    setError(true);\r\n                  }\r\n                }}\r\n              >\r\n                <DoneIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"end\"\r\n                onClick={() => {\r\n                  setOpen(!open);\r\n                  handleChange(\"\");\r\n                  setError(false);\r\n                }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </>\r\n          ) : (\r\n            <Tooltip title=\"Leave\" placement=\"left\" TransitionComponent={Zoom}>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setOpen(!open);\r\n                  handleChange(\"\");\r\n                  setError(false);\r\n                }}\r\n                edge=\"end\"\r\n              >\r\n                <ExitToAppIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n        </>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default Delete;\r\n","import React from \"react\";\r\nimport {\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Box,\r\n  Typography,\r\n  ListSubheader\r\n} from \"@material-ui/core\";\r\nimport { Consumer } from \"../context\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ConversationCreateDialog from \"./conversationCreateDialog\";\r\nimport ConversationJoinDialog from \"./conversationJoinDialog\";\r\nimport ConversationJoinInfoDialog from \"./conversationJoinStatusDialog\";\r\nimport LoadingIcon from \"./loadingIcon\";\r\nimport Leave from \"./leaveConfirmation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    \"::-webkit-scrollbar\": {\r\n      width: \"0.5em\"\r\n    },\r\n    \"::-webkit-scrollbar-thumb\": {\r\n      height: 56,\r\n      background: \"inherit\",\r\n      borderRadius: 4\r\n    }\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.default,\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n    overflow: \"auto\"\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n      flexBasis: 100\r\n    }\r\n  },\r\n  conversations: {\r\n    overflowY: \"auto\",\r\n    \"&:hover\": {\r\n      \"&::-webkit-scrollbar-thumb\": {\r\n        background: \"#cecece\"\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Consumer>\r\n      {({ authenticatedUser, conversationList }) => (\r\n        <Paper className={classes.paper} elevation={10}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Welcome {authenticatedUser.username}\r\n          </Typography>\r\n          <Box className={classes.buttons}>\r\n            <ConversationCreateDialog />\r\n            <ConversationJoinDialog />\r\n            <ConversationJoinInfoDialog />\r\n          </Box>\r\n          {conversationList === -1 ? (\r\n            <LoadingIcon page=\"dashboard\" />\r\n          ) : conversationList.length === 0 ? (\r\n            <Typography variant=\"h4\">\r\n              You do not have any conversations\r\n            </Typography>\r\n          ) : (\r\n            <List component=\"nav\" className={classes.conversations}>\r\n              <ListSubheader disableSticky>My Conversations</ListSubheader>\r\n              {conversationList.map(conversation => {\r\n                return (\r\n                  <ListItem\r\n                    // onClick={goToConversation.bind(this, conversation.id)}\r\n                    component={Link}\r\n                    to={{\r\n                      pathname: \"/chat\",\r\n                      state: {\r\n                        selectedConversation: {\r\n                          ...conversation\r\n                        }\r\n                      }\r\n                    }}\r\n                    key={conversation.id}\r\n                    button\r\n                    divider\r\n                  >\r\n                    <ListItemText primary={conversation.name} />\r\n                    <ListItemSecondaryAction>\r\n                      <Leave name={conversation.name} id={conversation.id} />\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          )}\r\n        </Paper>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst notFound = () => {\r\n  return (\r\n    <Typography variant=\"h2\" color=\"error\" align=\"center\">\r\n      404 Not Found\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default notFound;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { Consumer } from \"../context\";\r\n\r\nconst DashboardRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Consumer>\r\n      {({ authenticatedUser }) => (\r\n        <Route\r\n          {...rest}\r\n          render={props =>\r\n            authenticatedUser ? <Component {...props} /> : <Redirect to=\"/\" />\r\n          }\r\n        />\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default DashboardRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { Consumer } from \"../context\";\r\n\r\nconst HomeRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Consumer>\r\n      {({ authenticatedUser }) => (\r\n        <Route\r\n          {...rest}\r\n          render={props =>\r\n            !authenticatedUser ? (\r\n              <Component {...props} />\r\n            ) : (\r\n              <Redirect to=\"/dashboard\" />\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default HomeRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { Consumer } from \"../context\";\r\n\r\nconst ChatRoute = ({ component: Component, location: { state }, ...rest }) => {\r\n  return (\r\n    <Consumer>\r\n      {({\r\n        authenticatedUser,\r\n        goToConversation,\r\n        updateConversation,\r\n        clearActiveConversation\r\n      }) => (\r\n        <Route\r\n          {...rest}\r\n          render={props =>\r\n            authenticatedUser ? (\r\n              state ? (\r\n                <Component\r\n                  {...props}\r\n                  goToConversation={goToConversation}\r\n                  updateConversation={updateConversation}\r\n                  clearActiveConversation={clearActiveConversation}\r\n                />\r\n              ) : (\r\n                <Redirect to=\"/dashboard\" />\r\n              )\r\n            ) : (\r\n              <Redirect to=\"/\" />\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default ChatRoute;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Avatar, IconButton } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  own: {\r\n    alignSelf: \"flex-end\",\r\n    backgroundColor: \"#eaeaea\"\r\n  },\r\n  other: {\r\n    alignSelf: \"flex-start\",\r\n    backgroundColor: \"#EEF3FF\"\r\n  },\r\n  bubble: {\r\n    width: \"50%\",\r\n    margin: theme.spacing(2),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n      margin: 0\r\n    },\r\n    flex: \"none\",\r\n    wordBreak: \"break-all\"\r\n  },\r\n  cardContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  messageArea: {\r\n    marginTop: 10,\r\n    padding: 10,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 4\r\n  },\r\n  ownMessageArea: {\r\n    borderColor: \"#d0d0d0\",\r\n    backgroundColor: \"#f0f0f0\"\r\n  },\r\n  otherMessageArea: {\r\n    borderColor: \"#bbcfff8c\",\r\n    backgroundColor: \"#f3f6ff\"\r\n  },\r\n  infoBox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1\r\n  },\r\n  iconButton: {\r\n    padding: 0\r\n  },\r\n  username: {\r\n    marginLeft: 10,\r\n    marginRight: 10\r\n  },\r\n  mobileInfoBox: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"row-reverse\"\r\n    }\r\n  },\r\n  mobileInnerInfoBox: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexGrow: 0,\r\n      flexDirection: \"row-reverse\"\r\n    }\r\n  },\r\n  mobileDate: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexGrow: 1\r\n    }\r\n  }\r\n}));\r\n\r\nconst ChatBubble = ({ own, content, username, createdAt, calcAgo }) => {\r\n  const classes = useStyles();\r\n  const [ago1, setAgo] = useState(calcAgo(createdAt));\r\n  useEffect(() => {\r\n    setInterval(() => setAgo(calcAgo(createdAt)), 1000 * 60);\r\n  }, [calcAgo, createdAt]);\r\n  return (\r\n    <Card className={`${own ? classes.own : classes.other} ${classes.bubble}`}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Box\r\n          className={`${classes.infoBox} ${own ? classes.mobileInfoBox : null}`}\r\n        >\r\n          <Box\r\n            className={`${classes.infoBox} ${\r\n              own ? classes.mobileInnerInfoBox : null\r\n            }`}\r\n          >\r\n            <IconButton className={classes.iconButton}>\r\n              <Avatar>{username[0].toUpperCase()}</Avatar>\r\n            </IconButton>\r\n            <Typography color=\"textSecondary\" className={classes.username}>\r\n              {username}\r\n            </Typography>\r\n          </Box>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            className={own ? classes.mobileDate : null}\r\n          >\r\n            {ago1}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          className={`${\r\n            own ? classes.ownMessageArea : classes.otherMessageArea\r\n          } ${classes.messageArea}`}\r\n        >\r\n          {content}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChatBubble;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport ChatBubble from \"./chatBubble\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Consumer } from \"../context\";\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: 500,\r\n    overflowY: \"scroll\",\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\nconst Messages = () => {\r\n  const classes = useStyles();\r\n  const endMessagesRef = useRef();\r\n  useEffect(() => {\r\n    if (endMessagesRef.current) {\r\n      endMessagesRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  });\r\n  // Scroll to bottom solution from https://stackoverflow.com/questions/37620694/how-to-scroll-to-bottom-in-react and https://stackoverflow.com/questions/56086130/reactjs-how-to-scroll-to-an-element-with-hooks-functions\r\n\r\n  return (\r\n    <Consumer>\r\n      {({ activeConversation, authenticatedUser, calculateTimesAgo }) => (\r\n        <>\r\n          {activeConversation === null ? null : activeConversation ===\r\n            -1 ? null : (\r\n            <Box className={classes.paper}>\r\n              {activeConversation.messages.map(message => (\r\n                <ChatBubble\r\n                  key={message._id}\r\n                  content={message.content}\r\n                  own={message.sentBy._id === authenticatedUser._id}\r\n                  username={message.sentBy.username}\r\n                  calcAgo={calculateTimesAgo}\r\n                  createdAt={message.createdAt}\r\n                />\r\n              ))}\r\n              <div ref={endMessagesRef}></div>\r\n            </Box>\r\n          )}\r\n        </>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  List,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItem,\r\n  DialogTitle,\r\n  Divider,\r\n  ListItemSecondaryAction,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport { Consumer } from \"../context\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst ConversationSettingsDialog = () => {\r\n  return (\r\n    <Consumer>\r\n      {({\r\n        handleConversationSettingsDialog,\r\n        conversationSettingsDialogStatus,\r\n        activeConversation,\r\n        newUser,\r\n        authenticatedUser\r\n      }) => (\r\n        <Dialog\r\n          open={conversationSettingsDialogStatus}\r\n          onClose={handleConversationSettingsDialog}\r\n          fullWidth\r\n          maxWidth=\"xs\"\r\n        >\r\n          <DialogTitle>Members</DialogTitle>\r\n          {activeConversation === null ? null : activeConversation ===\r\n            -1 ? null : (\r\n            <DialogContent>\r\n              <>\r\n                {activeConversation.admin !==\r\n                authenticatedUser._id ? null : activeConversation\r\n                    .memberCandidates.length === 0 ? null : (\r\n                  <>\r\n                    <List component=\"nav\">\r\n                      {activeConversation.memberCandidates.map(\r\n                        ({ _id, username }) => (\r\n                          <ListItem disableGutters key={_id}>\r\n                            <ListItemIcon>\r\n                              <PersonIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={username} />\r\n                            <ListItemSecondaryAction>\r\n                              <IconButton\r\n                                edge=\"end\"\r\n                                onClick={newUser.bind(\r\n                                  this,\r\n                                  _id,\r\n                                  activeConversation._id,\r\n                                  true\r\n                                )}\r\n                              >\r\n                                <DoneIcon />\r\n                              </IconButton>\r\n                              <IconButton\r\n                                edge=\"end\"\r\n                                onClick={newUser.bind(\r\n                                  this,\r\n                                  _id,\r\n                                  activeConversation._id,\r\n                                  false\r\n                                )}\r\n                              >\r\n                                <CloseIcon />\r\n                              </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                          </ListItem>\r\n                        )\r\n                      )}\r\n                    </List>\r\n                    <Divider />\r\n                  </>\r\n                )}\r\n              </>\r\n              <List component=\"nav\">\r\n                {activeConversation.members.map(({ username, _id }) => (\r\n                  <ListItem disableGutters key={_id}>\r\n                    <ListItemIcon>\r\n                      <PersonIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={username} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </DialogContent>\r\n          )}\r\n          <DialogActions>\r\n            <Button color=\"primary\" onClick={handleConversationSettingsDialog}>\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default ConversationSettingsDialog;\r\n","import React from \"react\";\r\nimport { TextField, Box, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Consumer } from \"../context\";\r\nimport ConversationSettingsDialog from \"./conversationSettingsDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  type: {\r\n    display: \"flex\",\r\n    marginTop: 8,\r\n    marginBottom: 8\r\n  }\r\n});\r\n\r\nconst Type = ({ socket }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Consumer>\r\n      {({\r\n        handleConversationSettingsDialog,\r\n        sendMessage,\r\n        onChange,\r\n        message\r\n      }) => (\r\n        <Box className={classes.type}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            onClick={handleConversationSettingsDialog}\r\n          >\r\n            <MoreVertIcon />\r\n          </Button>\r\n          <TextField\r\n            label={\r\n              message.length === 199\r\n                ? \"1 character left\"\r\n                : `${200 - message.length} characters left`\r\n            }\r\n            name=\"message\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            multiline\r\n            value={message}\r\n            rowsMax=\"3\"\r\n            // Send on enter solution from https://github.com/mui-org/material-ui/issues/5393 #SuEric\r\n            onKeyPress={e => {\r\n              if (e.key === \"Enter\") {\r\n                sendMessage(socket);\r\n                e.preventDefault();\r\n              }\r\n            }}\r\n            onChange={onChange}\r\n          />\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            onClick={sendMessage.bind(this, socket)}\r\n          >\r\n            <SendIcon />\r\n          </Button>\r\n          <ConversationSettingsDialog />\r\n        </Box>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default Type;\r\n","import React, { Component } from \"react\";\r\nimport Messages from \"./messages\";\r\nimport Type from \"./type\";\r\nimport LoadingIcon from \"./loadingIcon\";\r\nimport { Consumer } from \"../context\";\r\nimport io from \"socket.io-client\";\r\n\r\nclass Chat extends Component {\r\n  constructor() {\r\n    super();\r\n    this.socket = io(\"/\");\r\n  }\r\n  componentDidMount() {\r\n    const { selectedConversation } = this.props.location.state;\r\n    const { goToConversation, updateConversation } = this.props;\r\n    goToConversation(selectedConversation.id);\r\n    this.socket.on(\"updatedConversation\", conversation =>\r\n      updateConversation(conversation)\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    const { clearActiveConversation } = this.props;\r\n    this.socket.disconnect();\r\n    clearActiveConversation();\r\n  }\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {({ activeConversation }) => (\r\n          <>\r\n            {activeConversation === -1 ? (\r\n              <LoadingIcon page=\"chat\" />\r\n            ) : (\r\n              <>\r\n                <Messages />\r\n                <Type socket={this.socket} />\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header\";\nimport { Container } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Home from \"./components/home\";\nimport Dashboard from \"./components/dashboard\";\nimport notFound from \"./components/notFound\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"./context\";\nimport axios from \"axios\";\nimport DashboardRoute from \"./routes/dashboardRoute\";\nimport HomeRoute from \"./routes/homeRoute\";\nimport ChatRoute from \"./routes/chatRoute\";\nimport Chat from \"./components/chat\";\nimport { withRouter } from \"react-router-dom\";\n\n// prettier-ignore\nconst errors = [\n  \"All fields are required\",                                  // Error Code: 0\n  \"Username has to have at least 3 characters\",               // Error Code: 1\n  \"Username can not be longer than 10 characters\",            // Error Code: 2\n  \"Password has to have at least 3 characters\",               // Error Code: 3\n  \"Passwords did not match\",                                  // Error Code: 4\n  \"This username is already in use\",                          // Error Code: 5\n  \"Conversation name has to have at least 3 characters\",      // Error Code: 6\n  \"Conversation name can not be longer than 20 characters\",   // Error Code: 7\n  \"Description can not be longer than 20 characters\",         // Error Code: 8\n  \"This conversation name is already in use\"                  // Error Code: 9\n];\n\n// prettier-ignore\nconst conversationJoinMessages = [\n  \"There is no such conversation\",                                                      // Status Code: -2\n  \"You are already a member of this conversation, check the 'My Conversations' below\",  // Status Code: 2\n  \"Join request sent\",                                                                  // Status Code: 1\n  \"Your request is waiting for the admin's approval\",                                   // Status Code: 0\n  \"You are not allowed to join this conversation\"                                       // Status Code: -1\n];\n\nconst theme = createMuiTheme();\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\", // Registration info\n      password: \"\", // Registration info\n      password2: \"\", // Registration info\n      validationErrors: [],\n      showRegisterSuccessMessage: false,\n      loginUsername: \"\",\n      loginPassword: \"\",\n      authenticatedUser: -1,\n      showLoginFailedMessage: false,\n      conversationCreateDialogStatus: false,\n      conversationJoinDialogStatus: false,\n      conversationName: \"\",\n      conversationJoinName: \"\",\n      conversationDescription: \"\",\n      conversationList: [],\n      deleteConfirmationStatus: false,\n      conversationJoinStatus: \"\",\n      conversationInfoDialog: false,\n      conversationSettingsDialogStatus: false,\n      activeConversation: null,\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/isLoggedIn\").then(({ data: { user } }) => {\n      this.setState({\n        authenticatedUser: user\n      });\n      const { authenticatedUser } = this.state;\n      if (authenticatedUser) {\n        this.getConversationList();\n      }\n    });\n  }\n\n  handleMessage = () => {\n    this.setState({\n      showRegisterSuccessMessage: false,\n      showLoginFailedMessage: false\n    });\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value.substr(0, 200)\n    });\n  };\n\n  clearActiveConversation = () => {\n    this.setState({\n      activeConversation: null\n    });\n  };\n\n  removeValidationError = i => {\n    const { validationErrors } = this.state;\n    const index = validationErrors.indexOf(i);\n    if (index !== -1) {\n      this.setState({\n        validationErrors: validationErrors.filter((_, i) => index !== i)\n      });\n    }\n  };\n\n  addValidationError = i => {\n    if (!this.state.validationErrors.includes(i)) {\n      this.setState(prevState => ({\n        validationErrors: [...prevState.validationErrors, i]\n      }));\n    }\n  };\n\n  isValid = () => {\n    const { username, password, password2 } = this.state;\n    let valid = true;\n    if (\n      username.trim() === \"\" ||\n      password.trim() === \"\" ||\n      password2.trim() === \"\"\n    ) {\n      this.addValidationError(0);\n      valid = false;\n    } else {\n      this.removeValidationError(0);\n    }\n    if (username.length < 3) {\n      this.addValidationError(1);\n      valid = false;\n    } else {\n      this.removeValidationError(1);\n    }\n    if (username.length > 10) {\n      this.addValidationError(2);\n      valid = false;\n    } else {\n      this.removeValidationError(2);\n    }\n    if (password.length < 3) {\n      this.addValidationError(3);\n      valid = false;\n    } else {\n      this.removeValidationError(3);\n    }\n    if (password !== password2) {\n      this.addValidationError(4);\n      valid = false;\n    } else {\n      this.removeValidationError(4);\n    }\n    return valid;\n  };\n\n  isConversationValid = () => {\n    const { conversationName, conversationDescription } = this.state;\n    let valid = true;\n    if (conversationName.trim() === \"\" || conversationName.length < 3) {\n      this.addValidationError(6);\n      valid = false;\n    } else {\n      this.removeValidationError(6);\n    }\n    if (conversationName.length > 20) {\n      this.addValidationError(7);\n      valid = false;\n    } else {\n      this.removeValidationError(7);\n    }\n    if (conversationDescription.length > 20) {\n      this.addValidationError(8);\n      valid = false;\n    } else {\n      this.removeValidationError(8);\n    }\n    return valid;\n  };\n\n  handleSubmit = () => {\n    if (this.isValid()) {\n      const { username, password, password2 } = this.state;\n      const user = {\n        username,\n        password,\n        password2\n      };\n      axios\n        .post(\"/register\", user)\n        .then(res => {\n          if (res.data.errors) {\n            const { errors } = res.data;\n            this.setState({\n              validationErrors: errors\n            });\n          } else {\n            this.setState({\n              username: \"\",\n              password: \"\",\n              password2: \"\",\n              validationErrors: [],\n              showRegisterSuccessMessage: true\n            });\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n  handleLogin = () => {\n    const { loginPassword, loginUsername } = this.state;\n    if (loginPassword.trim() !== \"\" && loginUsername.trim() !== \"\") {\n      const user = {\n        loginUsername,\n        loginPassword\n      };\n      axios\n        .post(\"/login\", user)\n        .then(res => {\n          if (res.data.user) {\n            this.setState({\n              authenticatedUser: res.data.user\n            });\n            this.getConversationList();\n          }\n        })\n        .catch(err => {\n          if (err.response.status === 401) {\n            this.setState({\n              showLoginFailedMessage: true\n            });\n          }\n        });\n      this.setState({\n        loginPassword: \"\",\n        loginUsername: \"\",\n        validationErrors: [],\n        username: \"\",\n        password: \"\",\n        password2: \"\"\n      });\n    }\n  };\n\n  handleLogout = () => {\n    axios.get(\"/logout\").then(res => {\n      this.setState({\n        authenticatedUser: res.data.user,\n        conversationList: []\n      });\n    });\n  };\n\n  whichSnackbar = () => {\n    const { showLoginFailedMessage, showRegisterSuccessMessage } = this.state;\n    if (!showLoginFailedMessage && !showRegisterSuccessMessage) {\n      return null;\n    }\n    return showLoginFailedMessage ? \"error\" : \"success\";\n  };\n\n  handleConverstaionDialog = () => {\n    const { conversationCreateDialogStatus } = this.state;\n    this.setState({\n      conversationCreateDialogStatus: !conversationCreateDialogStatus,\n      conversationDescription: \"\",\n      conversationName: \"\",\n      validationErrors: [],\n      conversationJoinStatus: \"\"\n    });\n  };\n\n  handleConverstaionJoinDialog = () => {\n    const { conversationJoinDialogStatus } = this.state;\n    this.setState({\n      conversationJoinDialogStatus: !conversationJoinDialogStatus,\n      conversationJoinName: \"\",\n      conversationJoinStatus: \"\"\n    });\n  };\n\n  handleConverstaionCreate = () => {\n    const { conversationName, conversationDescription } = this.state;\n    if (this.isConversationValid()) {\n      const conversation = {\n        conversationName,\n        conversationDescription\n      };\n      axios\n        .post(\"/createConversation\", conversation)\n        .then(res => {\n          if (res.data.conversationCreated) {\n            this.getConversationList();\n            this.setState({\n              conversationCreateDialogStatus: false,\n              conversationDescription: \"\",\n              conversationName: \"\",\n              validationErrors: []\n            });\n          } else {\n            if (res.data.error.conversationExists) {\n              this.setState({\n                validationErrors: [9]\n              });\n            } else {\n              console.log(res.data.error);\n            }\n          }\n        })\n        .catch(e => console.log(e));\n    }\n  };\n\n  handleConverstaionJoin = () => {\n    const { conversationJoinName } = this.state;\n    const conversation = {\n      conversationJoinName\n    };\n    axios\n      .post(\"/joinConversation\", conversation)\n      .then(({ data: { status } }) => {\n        this.setState({\n          conversationJoinStatus: status,\n          conversationJoinDialogStatus: false,\n          conversationJoinName: \"\",\n          conversationInfoDialog: true\n        });\n      });\n  };\n\n  handleConversationJoinInfoDialogStatus = () => {\n    const { conversationInfoDialog } = this.state;\n    this.setState({\n      conversationInfoDialog: !conversationInfoDialog\n    });\n  };\n\n  getConversationList = () => {\n    this.setState({\n      conversationList: -1\n    });\n    setTimeout(() => {\n      axios.get(\"/getConversationList\").then(res => {\n        const { conversations } = res.data;\n        this.setState({\n          conversationList: conversations.reverse()\n        });\n      });\n    }, 1000);\n  };\n\n  handleLeaveConfirmation = id => {\n    axios\n      .post(\"/leaveConversation\", {\n        id\n      })\n      .then(({ data: { left } }) => (left ? this.getConversationList() : null))\n      .catch(err => console.log(err));\n  };\n\n  handleConversationSettingsDialog = () => {\n    const { conversationSettingsDialogStatus } = this.state;\n    this.setState({\n      conversationSettingsDialogStatus: !conversationSettingsDialogStatus\n    });\n  };\n\n  goToConversation = id => {\n    this.setState({\n      activeConversation: -1\n    });\n    setTimeout(() => {\n      axios.post(\"/getSelectedConversation\", { id }).then(res => {\n        const { selectedConversation } = res.data;\n        if (selectedConversation) {\n          this.setState({ activeConversation: selectedConversation });\n        }\n      });\n    }, 1000);\n  };\n\n  newUser = (userID, conversationID, status) => {\n    axios.post(\"/newUser\", { userID, conversationID, status }).then(res => {\n      const { conversation } = res.data;\n      if (conversation) {\n        this.setState({\n          activeConversation: conversation\n        });\n      }\n    });\n  };\n\n  sendMessage = socket => {\n    this.setState({\n      message: \"\"\n    });\n    const {\n      message,\n      activeConversation: { _id }\n    } = this.state;\n    if (message.length < 200 && message.trim() !== \"\") {\n      socket.emit(\"newMessage\", { message, _id });\n    }\n  };\n\n  calculateTimesAgo = createdAt => {\n    const now = new Date();\n    const created = new Date(createdAt);\n    const diffMs = now - created;\n    const diffSec = Math.floor(diffMs / 1000);\n    const diffMin = Math.floor(diffSec / 60);\n    const diffHour = Math.floor(diffMin / 60);\n    const diffDay = Math.floor(diffHour / 24);\n    const diffMonth = Math.floor(diffDay / 30);\n    if (diffMin === 0) {\n      return \"now\";\n    }\n    if (diffMin === 1) {\n      return \"1 minute ago\";\n    }\n    if (diffMin < 60) {\n      return `${diffMin} minutes ago`;\n    }\n    if (diffHour === 1) {\n      return \"1 hour ago\";\n    }\n    if (diffHour < 24) {\n      return `${diffHour} hours ago`;\n    }\n    if (diffDay === 1) {\n      return \"1 day ago\";\n    }\n    if (diffDay < 30) {\n      return `${diffDay} days ago`;\n    }\n    if (diffMonth === 1) {\n      return \"1 month ago\";\n    }\n    if (diffDay >= 30) {\n      return `${diffMonth} months ago`;\n    }\n  };\n\n  updateConversation = conversation => {\n    this.setState({ activeConversation: conversation });\n  };\n\n  render() {\n    const { authenticatedUser } = this.state;\n    return (\n      <>\n        {authenticatedUser === -1 ? null : (\n          <Provider\n            value={{\n              errors,\n              conversationJoinMessages,\n              ...this.state,\n              onChange: this.handleChange,\n              onClick: this.handleSubmit,\n              handleMessage: this.handleMessage,\n              onLogin: this.handleLogin,\n              handleLogout: this.handleLogout,\n              whichSnackbar: this.whichSnackbar,\n              handleConverstaionDialog: this.handleConverstaionDialog,\n              handleConverstaionCreate: this.handleConverstaionCreate,\n              getConversationList: this.getConversationList,\n              handleLeaveConfirmation: this.handleLeaveConfirmation,\n              handleConverstaionJoinDialog: this.handleConverstaionJoinDialog,\n              handleConverstaionJoin: this.handleConverstaionJoin,\n              handleConversationJoinInfoDialogStatus: this\n                .handleConversationJoinInfoDialogStatus,\n              handleConversationSettingsDialog: this\n                .handleConversationSettingsDialog,\n              goToConversation: this.goToConversation,\n              newUser: this.newUser,\n              sendMessage: this.sendMessage,\n              calculateTimesAgo: this.calculateTimesAgo,\n              updateConversation: this.updateConversation,\n              clearActiveConversation: this.clearActiveConversation\n            }}\n          >\n            <ThemeProvider theme={theme}>\n              <Header />\n              <Container\n                maxWidth={\"lg\"}\n                style={{\n                  flexGrow: \"1\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  overflow: \"auto\"\n                }}\n              >\n                <Switch>\n                  <HomeRoute exact path=\"/\" component={Home} />\n                  <DashboardRoute\n                    exact\n                    path=\"/dashboard\"\n                    component={Dashboard}\n                  />\n                  <ChatRoute\n                    exact\n                    path=\"/chat\"\n                    component={Chat}\n                    component2={Dashboard}\n                  />\n                  <Route component={notFound} />\n                </Switch>\n              </Container>\n            </ThemeProvider>\n          </Provider>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(props => <App {...props} />);\n\n/*TODO:\n * conversation oluşturma katılma silme text fieldlarında value değeri yok bunu incele.\n * entera basınca mesajı mı yollasın alt satıra mı geçsin anahtar koy\n * gruptan çıkma işlemini düzelt\n * admin gruptan çıkmak isterse birine adminliği devretsin\n * eğer devredecek kimse yoksa grup silinsin\n * şu an sadece tek boşluk bırakabiliyorsun ve alt satıra inemiyorsun\n */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    BrowserRouter\n} from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter >< App/> </BrowserRouter> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}